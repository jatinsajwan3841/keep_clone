{"version":3,"sources":["components/todo.js","components/header.js","App.js","index.js"],"names":["Base","layout","React","useState","todo","settodo","todoList","settodoList","expand","setexpand","rows","value","onClick","onChange","e","target","onBlur","details","id","Math","random","isCompleted","placeholder","className","map","t","contentEditable","filter","type","element","findIndex","elem","newtodoList","handleCompleted","Header","layt","src","App","setlayout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAIe,SAASA,EAAT,GAAwB,IAATC,EAAQ,EAARA,OAAQ,EACVC,IAAMC,SAAS,IADL,mBAC3BC,EAD2B,KACrBC,EADqB,OAEFH,IAAMC,SAAS,IAFb,mBAE3BG,EAF2B,KAEjBC,EAFiB,OAGNL,IAAMC,UAAS,GAHT,mBAG3BK,EAH2B,KAGnBC,EAHmB,KAyClC,OACI,qCACI,+BACI,0BAAUC,KAAMF,EAAS,EAAE,EAAIG,MAAOP,EAAMQ,QArCpC,kBAAMH,GAAU,IAqC0CI,SAvC5D,SAACC,GAAD,OAAOT,EAAQS,EAAEC,OAAOJ,QAuCyDK,OAnCjF,WACd,GAAY,IAARZ,EAAW,CACX,IAAMa,EAAU,CACZC,MAAqB,IAAdC,KAAKC,UACZT,MAAOP,EACPiB,aAAa,GAElBd,EAAY,GAAD,mBAAKD,GAAL,CAAeW,KAC1BZ,EAAQ,IACRI,GAAU,QAERA,GAAU,IAwBmGa,YAAY,wBAGzHhB,GAAY,GACb,oBAAIiB,UAAWtB,EAAS,YAAc,uBAAtC,SACKK,EAASkB,KAAI,SAAAC,GAAC,OACX,oBAAeF,UAAatB,EAAS,aAAe,yBAApD,SACI,sBAAKyB,iBAAe,EAACH,UAAWtB,EAAS,WAAa,qBAAtD,UACI,sBAAMsB,UAAaE,EAAEJ,YAAc,QAAU,GAA7C,SAAmDI,EAAEd,QACrD,uBAAMY,UAAU,QAAhB,UACI,wBAAQA,UAAU,MAAMX,QAAS,kBA/BtCM,EA+ByDO,EAAEP,QA9B9EX,EAAYD,EAASqB,QAAO,SAACF,GAAD,OAAOA,EAAEP,IAAMA,MAD1B,IAAEA,GA+BK,SAA2D,cAAC,IAAD,MAC3D,uBAAOK,UAAU,MAAMK,KAAK,WAAWV,GAAG,YAAYN,QAAS,kBA5BnE,SAACM,GAErB,IAAMW,EAAUvB,EAASwB,WAAU,SAACC,GAAD,OAAUA,EAAKb,IAAMA,KAElDc,EAAW,YAAO1B,GAExB0B,EAAYH,GAAZ,2BACOG,EAAYH,IADnB,IAEIR,aAAa,IAGjBd,EAAYyB,GAiBiFC,CAAgBR,EAAEP,cAL1FO,EAAEP,SAajB,Q,WC/DC,SAASgB,EAAT,GAAgC,IAAfC,EAAc,EAAdA,KAAMlC,EAAQ,EAARA,OAClC,OACI,mCAAQ,qBAAKmC,IAAI,4EAA2E,2CAC5F,wBAAQb,UAAU,OAAOX,QAAS,kBAAIuB,KAAtC,SACKlC,EAAS,cAAC,IAAD,IAAoB,cAAC,IAAD,SCY3BoC,MAff,WAAgB,IAAD,EACenC,IAAMC,UAAS,GAD9B,mBACNF,EADM,KACEqC,EADF,KAOb,OACE,qCACA,cAACJ,EAAD,CAAQC,KANE,WACDG,GAATrC,IAKqBA,OAAUA,IAC/B,cAACD,EAAD,CAAMC,OAASA,QCVnBsC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1b1bd93d.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./comp.css\";\r\nimport { MdDelete } from \"react-icons/md\";\r\n\r\nexport default function Base({layout}){\r\n    const [todo, settodo] = React.useState('');\r\n    const [todoList, settodoList] = React.useState([]);\r\n    const [expand, setexpand] = React.useState(false);\r\n\r\n    const handleVal = (e) => settodo(e.target.value);\r\n\r\n    const handlexpand = () => setexpand(true);\r\n\r\n    const handleAdd = () =>{\r\n        if (todo != ''){\r\n            const details = {\r\n                id: ~~(Math.random()*1000),\r\n                value: todo,\r\n                isCompleted: false,\r\n            } \r\n           settodoList([...todoList, details]) ;\r\n           settodo('');\r\n           setexpand(false);\r\n        }\r\n        else setexpand(false);\r\n    }\r\n\r\n    const handleDelete = ( id) =>{\r\n        settodoList(todoList.filter((t) => t.id != id));\r\n    }\r\n\r\n    const handleCompleted = (id) => {\r\n        //find index of that array object\r\n        const element = todoList.findIndex((elem) => elem.id == id);\r\n        //copy array into new variable using spread op.\r\n        const newtodoList = [...todoList]\r\n        //edit that element\r\n        newtodoList[element] = {\r\n            ...newtodoList[element],\r\n            isCompleted: true,\r\n        };\r\n\r\n        settodoList(newtodoList);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <form>                \r\n                <textarea rows={expand ? 3:1 } value={todo} onClick={handlexpand} onChange={handleVal} onBlur={handleAdd} placeholder='Take your note...' />\r\n            </form>\r\n        \r\n            {todoList != [] ? \r\n            <ul className={layout ? 'container' : 'container containerf'}>\r\n                {todoList.map(t =>\r\n                    <li key={t.id} className = {layout ? 'noteholder' : 'noteholder noteholderf'}>\r\n                        <div contentEditable className={layout ? 'textarea' : 'textarea textareaf'}>\r\n                            <span className = {t.isCompleted ? 'cross' : ''} >{t.value}</span>\r\n                            <span className='tools'>\r\n                                <button className='btn' onClick={() => handleDelete(t.id)}><MdDelete/></button>   \r\n                                <input className='btn' type='checkbox' id='completed' onClick={() => handleCompleted(t.id)} />\r\n                            </span>\r\n                        </div>\r\n                        \r\n                    </li>\r\n                    )}\r\n            </ul>\r\n            \r\n            : null}\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./comp.css\";\r\nimport { RiLayoutGridLine, RiLayoutRowLine } from \"react-icons/ri\";\r\n\r\nexport default function Header({layt, layout}){\r\n    return(\r\n        <header><img src=\"https://www.gstatic.com/images/branding/product/1x/keep_2020q4_48dp.png\"/><p>Keep clone</p>\r\n        <button className='hbtn' onClick={()=>layt()}>\r\n            {layout ? <RiLayoutRowLine/> :<RiLayoutGridLine/>}\r\n            </button>\r\n        </header>\r\n    )\r\n}","import Base from './components/todo'\r\nimport Header from \"./components/header\";\r\nimport React from 'react'\r\n\r\n\r\nfunction App() {\r\n  const [layout, setlayout] = React.useState(true);\r\n\r\n  const lay = () => {\r\n    layout ? setlayout(false) : setlayout(true);   \r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Header layt = {lay} layout = {layout}/>\r\n    <Base layout ={layout}/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}