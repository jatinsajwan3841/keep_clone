{"version":3,"sources":["components/header/index.js","components/localState/index.js","components/dashboard/index.js","components/login/index.js","components/register/index.js","App.js","index.js"],"names":["Header","layt","layout","darkMode","setDarkMode","history","className","src","onClick","localStorage","removeItem","push","useStickyState","defaultValue","key","React","useState","stickyValue","window","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","Dashboard","todo","settodo","todoList","settodoList","expand","setexpand","setlayout","useHistory","handleAdd","a","details","fetch","process","method","headers","body","send","status","json","alert","handleDelete","id","filter","t","_id","handleCompleted","element","findIndex","elem","newtodoList","temp","isCompleted","init","token","res","replace","jwt","decode","prev","rows","onChange","e","target","onBlur","placeholder","map","Date","date","toLocaleString","type","Login","handleSubmit","preventDefault","email","pass","password","response","user","onSubmit","htmlFor","name","required","to","Register","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1a35e73.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./index.scss\";\r\nimport {\r\n    RiLayoutGridLine,\r\n    RiLayoutRowLine,\r\n    RiSunLine,\r\n    RiSunFill,\r\n    RiLogoutCircleRLine,\r\n} from \"react-icons/ri\";\r\n\r\nconst Header = ({ layt, layout, darkMode, setDarkMode, history }) => {\r\n    return (\r\n        <header className=\"header\">\r\n            <img src=\"https://www.gstatic.com/images/branding/product/1x/keep_2020q4_48dp.png\" />\r\n            <p className=\"KC\">Keep clone</p>\r\n            <div className=\"layoutBtn\" onClick={() => layt()}>\r\n                {layout ? <RiLayoutRowLine /> : <RiLayoutGridLine />}\r\n            </div>\r\n            <div className=\"layoutBtn\" onClick={() => setDarkMode(!darkMode)}>\r\n                {darkMode ? <RiSunFill /> : <RiSunLine />}\r\n            </div>\r\n            <div\r\n                className=\"layoutBtn\"\r\n                onClick={() => {\r\n                    localStorage.removeItem(\"token\");\r\n                    history.push(\"/login\");\r\n                }}\r\n            >\r\n                <RiLogoutCircleRLine />\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nconst useStickyState = (defaultValue, key) => {\r\n    const [value, setValue] = React.useState(() => {\r\n        const stickyValue = window.localStorage.getItem(key);\r\n        return stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\r\n    });\r\n    React.useEffect(() => {\r\n        window.localStorage.setItem(key, JSON.stringify(value));\r\n    }, [key, value]);\r\n    return [value, setValue];\r\n};\r\nexport default useStickyState;\r\n","import React from \"react\";\r\nimport Header from \"../header\";\r\nimport useStickyState from \"../localState\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./index.scss\";\r\nimport { MdDelete } from \"react-icons/md\";\r\n\r\nconst Dashboard = () => {\r\n    const [todo, settodo] = React.useState(\"\");\r\n    const [todoList, settodoList] = React.useState([]);\r\n    const [expand, setexpand] = React.useState(false);\r\n    const [layout, setlayout] = useStickyState(true, \"layout\");\r\n    const [darkMode, setDarkMode] = useStickyState(false, \"dark-mode\");\r\n    const history = useHistory();\r\n\r\n    const lay = () => {\r\n        setlayout((prev) => !prev);\r\n    };\r\n\r\n    const handleVal = (e) => settodo(e.target.value);\r\n\r\n    const handlexpand = () => setexpand(true);\r\n\r\n    const handleAdd = async () => {\r\n        if (todo != \"\") {\r\n            let details = {\r\n                value: todo,\r\n            };\r\n            let send = await fetch(\r\n                `${process.env.REACT_APP_BASE_URL + \"/notes\"}`,\r\n                {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"x-access-token\": localStorage.getItem(\"token\"),\r\n                    },\r\n                    body: JSON.stringify(details),\r\n                }\r\n            );\r\n            if (send.status === 200) {\r\n                details = await send.json();\r\n                settodoList([...todoList, details]);\r\n                settodo(\"\");\r\n                setexpand(false);\r\n            } else {\r\n                alert(\"something went wrong, try again!\");\r\n            }\r\n        } else setexpand(false);\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        let res = await fetch(\r\n            `${process.env.REACT_APP_BASE_URL}/notes?id=${id}`,\r\n            {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"x-access-token\": localStorage.getItem(\"token\"),\r\n                },\r\n            }\r\n        );\r\n        if (res.status === 200) {\r\n            settodoList(todoList.filter((t) => t._id != id));\r\n        } else {\r\n            alert(\"something went wrong\");\r\n        }\r\n    };\r\n\r\n    const handleCompleted = async (id) => {\r\n        //find index of that array object\r\n        const element = todoList.findIndex((elem) => elem._id === id);\r\n        //copy array into new variable using spread op.\r\n        const newtodoList = [...todoList];\r\n        //edit that element\r\n        let temp = newtodoList[element].isCompleted;\r\n        let res = await fetch(\r\n            `${\r\n                process.env.REACT_APP_BASE_URL\r\n            }/notes?id=${id}&isCompleted=${!temp}`,\r\n            {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"x-access-token\": localStorage.getItem(\"token\"),\r\n                },\r\n                body: JSON.stringify({ value: newtodoList[element].value }),\r\n            }\r\n        );\r\n        if (res.status === 200) {\r\n            newtodoList[element] = {\r\n                ...newtodoList[element],\r\n                isCompleted: !temp,\r\n            };\r\n\r\n            settodoList(newtodoList);\r\n        } else {\r\n            alert(\"something went wrong\");\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        const init = async (token) => {\r\n            let res = await fetch(\r\n                `${process.env.REACT_APP_BASE_URL + \"/notes\"}`,\r\n                {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"x-access-token\": token,\r\n                    },\r\n                }\r\n            );\r\n            if (res.status === 200) {\r\n                res = await res.json();\r\n                await settodoList(res);\r\n            } else if (res.status === 401) {\r\n                localStorage.removeItem(\"token\");\r\n                alert(\"relogin again\");\r\n                history.replace(\"/login\");\r\n            }\r\n        };\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token) {\r\n            const user = jwt.decode(token);\r\n            if (!user) {\r\n                localStorage.removeItem(\"token\");\r\n                history.replace(\"/login\");\r\n            } else {\r\n                init(token);\r\n            }\r\n        } else {\r\n            history.replace(\"/login\");\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className={`main ${darkMode && \"darkMode\"}`}>\r\n            <Header\r\n                layt={lay}\r\n                layout={layout}\r\n                darkMode={darkMode}\r\n                setDarkMode={setDarkMode}\r\n                history={history}\r\n            />\r\n            <form className=\"addNote\">\r\n                <textarea\r\n                    rows={expand ? 3 : 1}\r\n                    value={todo}\r\n                    onClick={handlexpand}\r\n                    onChange={handleVal}\r\n                    onBlur={handleAdd}\r\n                    placeholder=\"Take your note...\"\r\n                />\r\n            </form>\r\n\r\n            {todoList != [] ? (\r\n                <ul className={`container ${!layout && \"f\"}`}>\r\n                    {todoList.map((t) => (\r\n                        <li\r\n                            key={t._id}\r\n                            className={`noteholder ${!layout && \"f\"}`}\r\n                        >\r\n                            <div className={`note-text ${!layout && \"f\"}`}>\r\n                                <span className={t.isCompleted && \"cross\"}>\r\n                                    {t.value}\r\n                                </span>\r\n                                <span className=\"tools\">\r\n                                    <span className=\"date\">\r\n                                        {`${new Date(t.date).toLocaleString()}`}\r\n                                    </span>\r\n                                    <button\r\n                                        className=\"btn\"\r\n                                        onClick={() => handleDelete(t._id)}\r\n                                    >\r\n                                        <MdDelete />\r\n                                    </button>\r\n                                    <input\r\n                                        className=\"btn\"\r\n                                        type=\"checkbox\"\r\n                                        id=\"completed\"\r\n                                        onClick={() => handleCompleted(t._id)}\r\n                                    />\r\n                                </span>\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            ) : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport \"./index.scss\";\r\n\r\nconst Login = () => {\r\n    let history = useHistory();\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const email = e.target.email.value;\r\n        const pass = e.target.password.value;\r\n        let res = await fetch(`${process.env.REACT_APP_BASE_URL + \"/login\"}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ email: email, password: pass }),\r\n        });\r\n        if (res.status === 200) {\r\n            let response = await res.json();\r\n            localStorage.setItem(\"token\", response.user);\r\n            history.push(\"/\");\r\n        } else {\r\n            alert(\"wrong username or password\");\r\n        }\r\n    };\r\n    React.useEffect(() => {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token) {\r\n            history.replace(\"/\");\r\n        }\r\n    }, []);\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"avatar\" />\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"inp-content\">\r\n                    <label htmlFor=\"email\" className=\"label\">\r\n                        Please enter your email\r\n                    </label>\r\n                    <input type=\"email\" name=\"email\" required />\r\n                    <hr className=\"border-bottom\" />\r\n                    <span className=\"placeholder\">email</span>\r\n                </div>\r\n                <div className=\"inp-content\">\r\n                    <label htmlFor=\"password\" className=\"label\">\r\n                        Please enter your password\r\n                    </label>\r\n                    <input type=\"password\" name=\"password\" required />\r\n                    <hr className=\"border-bottom\" />\r\n                    <span className=\"placeholder\">password</span>\r\n                </div>\r\n                <center>\r\n                    <input\r\n                        type=\"submit\"\r\n                        value=\"Login\"\r\n                        className=\"form-button\"\r\n                    />\r\n                </center>\r\n                <Link to=\"/register\" className=\"link\">\r\n                    Click here to register\r\n                </Link>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport \"../login/index.scss\";\r\n\r\nconst Register = () => {\r\n    let history = useHistory();\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const name = e.target.email.value;\r\n        const email = e.target.email.value;\r\n        const pass = e.target.password.value;\r\n        let res = await fetch(\r\n            `${process.env.REACT_APP_BASE_URL + \"/register\"}`,\r\n            {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    name: name,\r\n                    email: email,\r\n                    password: pass,\r\n                }),\r\n            }\r\n        );\r\n        if (res.status === 200) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            alert(\"user already exist\");\r\n        }\r\n    };\r\n    React.useEffect(() => {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token) {\r\n            history.replace(\"/\");\r\n        }\r\n    }, []);\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"avatar\" />\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"inp-content\">\r\n                    <label htmlFor=\"name\" className=\"label\">\r\n                        Please enter your name\r\n                    </label>\r\n                    <input type=\"text\" name=\"name\" required />\r\n                    <hr className=\"border-bottom\" />\r\n                    <span className=\"placeholder\">name</span>\r\n                </div>\r\n                <div className=\"inp-content\">\r\n                    <label htmlFor=\"email\" className=\"label\">\r\n                        Please enter your email\r\n                    </label>\r\n                    <input type=\"email\" name=\"email\" required />\r\n                    <hr className=\"border-bottom\" />\r\n                    <span className=\"placeholder\">email</span>\r\n                </div>\r\n                <div className=\"inp-content\">\r\n                    <label htmlFor=\"password\" className=\"label\">\r\n                        Please enter your password\r\n                    </label>\r\n                    <input type=\"password\" name=\"password\" required />\r\n                    <hr className=\"border-bottom\" />\r\n                    <span className=\"placeholder\">password</span>\r\n                </div>\r\n                <center>\r\n                    <input\r\n                        type=\"submit\"\r\n                        value=\"Register\"\r\n                        className=\"form-button\"\r\n                    />\r\n                </center>\r\n                <Link to=\"/login\" className=\"link\">\r\n                    Click here to login\r\n                </Link>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport Dashboard from \"./components/dashboard\";\r\nimport Login from \"./components/login\";\r\nimport Register from \"./components/register\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Route path=\"/login\" exact component={Login} />\r\n            <Route path=\"/register\" exact component={Register} />\r\n            <Route path=\"/\" exact component={Dashboard} />\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}