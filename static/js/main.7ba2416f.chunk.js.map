{"version":3,"sources":["components/header/index.js","components/context/index.js","components/profile/index.js","components/localState/index.js","components/dashboard/index.js","components/login/index.js","components/register/index.js","components/loading/index.js","App.js","index.js"],"names":["Header","layt","layout","darkMode","setDarkMode","history","dp","handleProfile","className","src","onClick","alt","localStorage","removeItem","push","LoadContext","createContext","Profile","user","setUser","React","useState","setDp","useHistory","setLoading","useContext","handleDp","e","a","tdp","target","files","size","reader","FileReader","onload","re","temp","btoa","result","readAsBinaryString","alert","handleSubmit","preventDefault","name","value","pass","password","fetch","process","method","headers","getItem","body","JSON","stringify","res","status","replace","useEffect","onSubmit","type","accept","onChange","htmlFor","placeholder","defaultValue","minLength","required","disabled","useStickyState","key","stickyValue","window","parse","setValue","setItem","Dashboard","todo","settodo","todoList","settodoList","expand","setexpand","setlayout","showProfile","setShowProfile","prev","handleAdd","details","send","json","handleDelete","id","filter","t","_id","handleCompleted","element","findIndex","elem","newtodoList","isCompleted","init","token","jwt","decode","rows","onBlur","map","Date","date","toLocaleString","checked","Login","email","response","to","Register","Loading","App","loading","Provider","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ba2416f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./index.scss\";\r\nimport {\r\n    RiLayoutGridLine,\r\n    RiLayoutRowLine,\r\n    RiSunLine,\r\n    RiSunFill,\r\n    RiLogoutCircleRLine,\r\n} from \"react-icons/ri\";\r\n\r\nconst Header = ({\r\n    layt,\r\n    layout,\r\n    darkMode,\r\n    setDarkMode,\r\n    history,\r\n    dp,\r\n    handleProfile,\r\n}) => {\r\n    return (\r\n        <header className=\"header\">\r\n            <img src=\"https://www.gstatic.com/images/branding/product/1x/keep_2020q4_48dp.png\" />\r\n            <p className=\"KC\">Keep clone</p>\r\n            <div className=\"layoutBtn\" onClick={handleProfile}>\r\n                {dp !== \"false\" ? (\r\n                    <img\r\n                        className=\"dp\"\r\n                        alt=\"dp\"\r\n                        src={`data:image/jpeg;base64,${dp}`}\r\n                    />\r\n                ) : (\r\n                    <div className=\"dp\" />\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"layoutBtn\" onClick={() => layt()}>\r\n                {layout ? <RiLayoutRowLine /> : <RiLayoutGridLine />}\r\n            </div>\r\n            <div className=\"layoutBtn\" onClick={() => setDarkMode(!darkMode)}>\r\n                {darkMode ? <RiSunFill /> : <RiSunLine />}\r\n            </div>\r\n            <div\r\n                className=\"layoutBtn\"\r\n                onClick={() => {\r\n                    localStorage.removeItem(\"token\");\r\n                    history.push(\"/login\");\r\n                }}\r\n            >\r\n                <RiLogoutCircleRLine />\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import { createContext } from \"react\";\r\nexport const LoadContext = createContext();\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { LoadContext } from \"../context\";\r\nimport \"../login/index.scss\";\r\n\r\nconst Profile = ({ user, handleProfile, setUser }) => {\r\n    const [dp, setDp] = React.useState(\"false\");\r\n    let history = useHistory();\r\n    const { setLoading } = React.useContext(LoadContext);\r\n    const handleDp = async (e) => {\r\n        let tdp = e.target.files[0];\r\n        if (tdp && tdp.size < 2000000) {\r\n            const reader = new FileReader();\r\n            reader.onload = (re) => {\r\n                let temp = btoa(re.target.result);\r\n                setDp(temp);\r\n            };\r\n            reader.readAsBinaryString(tdp);\r\n        } else {\r\n            alert(\"please choose file of size less than 2MB!\");\r\n        }\r\n    };\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const name = e.target.name.value;\r\n        let pass = e.target.password.value;\r\n        if (pass === \"\") {\r\n            pass = false;\r\n        }\r\n        let res = await fetch(`${process.env.REACT_APP_BASE_URL + \"/update\"}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-access-token\": localStorage.getItem(\"token\"),\r\n            },\r\n            body: JSON.stringify({\r\n                name: name,\r\n                password: pass,\r\n                dp: dp,\r\n            }),\r\n        });\r\n        setLoading(false);\r\n        if (res.status === 200) {\r\n            alert(\"yay! successfully updated!\");\r\n            setUser([name, user[1], dp]);\r\n            handleProfile();\r\n            if (pass) {\r\n                localStorage.removeItem(\"token\");\r\n                history.replace(\"/login\");\r\n            }\r\n        } else {\r\n            alert(\"Something went wrong\");\r\n        }\r\n    };\r\n    React.useEffect(() => {\r\n        setDp(user[2]);\r\n    }, []);\r\n    return (\r\n        <div className=\"login-container\">\r\n            <h3 className=\"start\">\r\n                Here's your profile <span className=\"high\">╰(*°▽°*)╯</span>{\" \"}\r\n            </h3>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    <div className=\"avatar\">\r\n                        {dp !== \"false\" && (\r\n                            <img\r\n                                className=\"dp\"\r\n                                alt=\"dp\"\r\n                                src={`data:image/jpeg;base64,${dp}`}\r\n                            />\r\n                        )}\r\n                        <span className=\"upload\" />\r\n                    </div>\r\n                    <input\r\n                        type=\"file\"\r\n                        name=\"dp\"\r\n                        accept=\".jpeg, .jpg,.png\"\r\n                        onChange={handleDp}\r\n                    />\r\n                </label>\r\n                <div className=\"inp-content\">\r\n                    <label htmlFor=\"name\" className=\"label\">\r\n                        Your name\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        placeholder=\" \"\r\n                        defaultValue={user[0]}\r\n                        minLength=\"3\"\r\n                        required\r\n                    />\r\n                    <hr className=\"border-bottom\" />\r\n                    <span className=\"placeholder\">name</span>\r\n                </div>\r\n                <div className=\"inp-content\">\r\n                    <label htmlFor=\"email\" className=\"label\">\r\n                        Your email\r\n                    </label>\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        defaultValue={user[1]}\r\n                        disabled\r\n                        required\r\n                    />\r\n                    <hr className=\"border-bottom\" />\r\n                    <span className=\"placeholder\">email</span>\r\n                </div>\r\n                <div className=\"inp-content\">\r\n                    <label htmlFor=\"password\" className=\"label\">\r\n                        Changing password will log you out!\r\n                    </label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\" \"\r\n                        minLength=\"6\"\r\n                    />\r\n                    <hr className=\"border-bottom\" />\r\n                    <span className=\"placeholder\">password</span>\r\n                </div>\r\n                <center>\r\n                    <input\r\n                        type=\"submit\"\r\n                        value=\"Update\"\r\n                        className=\"form-button\"\r\n                    />\r\n                </center>\r\n                <div className=\"link\" onClick={handleProfile}>\r\n                    Click here to go back!\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nconst useStickyState = (defaultValue, key) => {\r\n    const [value, setValue] = React.useState(() => {\r\n        const stickyValue = window.localStorage.getItem(key);\r\n        return stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\r\n    });\r\n    React.useEffect(() => {\r\n        window.localStorage.setItem(key, JSON.stringify(value));\r\n    }, [key, value]);\r\n    return [value, setValue];\r\n};\r\nexport default useStickyState;\r\n","import React from \"react\";\r\nimport Header from \"../header\";\r\nimport Profile from \"../profile\";\r\nimport useStickyState from \"../localState\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { LoadContext } from \"../context\";\r\nimport \"./index.scss\";\r\nimport { MdDelete } from \"react-icons/md\";\r\n\r\nconst Dashboard = () => {\r\n    const [todo, settodo] = React.useState(\"\");\r\n    const [todoList, settodoList] = React.useState([]);\r\n    const [expand, setexpand] = React.useState(false);\r\n    const [layout, setlayout] = useStickyState(true, \"layout\");\r\n    const [darkMode, setDarkMode] = useStickyState(false, \"dark-mode\");\r\n    const [user, setUser] = React.useState([\"false\", \"false\", \"false\"]);\r\n    const [showProfile, setShowProfile] = React.useState(false);\r\n    const history = useHistory();\r\n    const { setLoading } = React.useContext(LoadContext);\r\n\r\n    const lay = () => {\r\n        setlayout((prev) => !prev);\r\n    };\r\n\r\n    const handleVal = (e) => settodo(e.target.value);\r\n\r\n    const handlexpand = () => setexpand(true);\r\n\r\n    const handleProfile = () => setShowProfile((prev) => !prev);\r\n\r\n    const handleAdd = async () => {\r\n        if (todo != \"\") {\r\n            let details = {\r\n                value: todo,\r\n            };\r\n            setLoading(true);\r\n            let send = await fetch(\r\n                `${process.env.REACT_APP_BASE_URL + \"/notes\"}`,\r\n                {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"x-access-token\": localStorage.getItem(\"token\"),\r\n                    },\r\n                    body: JSON.stringify(details),\r\n                }\r\n            );\r\n            setLoading(false);\r\n            if (send.status === 200) {\r\n                details = await send.json();\r\n                settodoList([...todoList, details]);\r\n                settodo(\"\");\r\n                setexpand(false);\r\n            } else {\r\n                alert(\"something went wrong, try again!\");\r\n            }\r\n        } else setexpand(false);\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        setLoading(true);\r\n        let res = await fetch(\r\n            `${process.env.REACT_APP_BASE_URL}/notes?id=${id}`,\r\n            {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"x-access-token\": localStorage.getItem(\"token\"),\r\n                },\r\n            }\r\n        );\r\n        setLoading(false);\r\n        if (res.status === 200) {\r\n            settodoList(todoList.filter((t) => t._id != id));\r\n        } else {\r\n            alert(\"something went wrong\");\r\n        }\r\n    };\r\n\r\n    const handleCompleted = async (id) => {\r\n        const element = todoList.findIndex((elem) => elem._id === id);\r\n        const newtodoList = [...todoList];\r\n        let temp = newtodoList[element].isCompleted;\r\n        let res = await fetch(\r\n            `${\r\n                process.env.REACT_APP_BASE_URL\r\n            }/notes?id=${id}&isCompleted=${!temp}`,\r\n            {\r\n                method: \"PATCH\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"x-access-token\": localStorage.getItem(\"token\"),\r\n                },\r\n                body: JSON.stringify({ value: newtodoList[element].value }),\r\n            }\r\n        );\r\n        if (res.status === 200) {\r\n            newtodoList[element] = {\r\n                ...newtodoList[element],\r\n                isCompleted: !temp,\r\n            };\r\n\r\n            settodoList(newtodoList);\r\n        } else {\r\n            alert(\"something went wrong\");\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        setLoading(true);\r\n        const init = async (token) => {\r\n            let res = await fetch(\r\n                `${process.env.REACT_APP_BASE_URL + \"/notes\"}`,\r\n                {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"x-access-token\": token,\r\n                    },\r\n                }\r\n            );\r\n            setLoading(false);\r\n            if (res.status === 200) {\r\n                res = await res.json();\r\n                settodoList(res[0]);\r\n                setUser([res[1], res[2], res[3]]);\r\n            } else if (res.status === 401) {\r\n                localStorage.removeItem(\"token\");\r\n                alert(\"relogin again\");\r\n                history.replace(\"/login\");\r\n            }\r\n        };\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token) {\r\n            const user = jwt.decode(token);\r\n            if (!user) {\r\n                localStorage.removeItem(\"token\");\r\n                setLoading(false);\r\n                history.replace(\"/login\");\r\n            } else {\r\n                init(token);\r\n            }\r\n        } else {\r\n            setLoading(false);\r\n            history.replace(\"/login\");\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className={`main ${darkMode && \"darkMode\"}`}>\r\n            <Header\r\n                layt={lay}\r\n                layout={layout}\r\n                darkMode={darkMode}\r\n                setDarkMode={setDarkMode}\r\n                history={history}\r\n                dp={user[2]}\r\n                handleProfile={handleProfile}\r\n            />\r\n            {showProfile ? (\r\n                <Profile\r\n                    user={user}\r\n                    handleProfile={handleProfile}\r\n                    setUser={setUser}\r\n                />\r\n            ) : (\r\n                <>\r\n                    <form className=\"addNote\">\r\n                        <textarea\r\n                            rows={expand ? 3 : 1}\r\n                            value={todo}\r\n                            onClick={handlexpand}\r\n                            onChange={handleVal}\r\n                            onBlur={handleAdd}\r\n                            placeholder=\"Take your note...\"\r\n                        />\r\n                    </form>\r\n\r\n                    {todoList != [] ? (\r\n                        <ul className={`container ${!layout && \"f\"}`}>\r\n                            {todoList.map((t) => (\r\n                                <li\r\n                                    key={t._id}\r\n                                    className={`noteholder ${!layout && \"f\"}`}\r\n                                >\r\n                                    <div\r\n                                        className={`note-text ${\r\n                                            !layout && \"f\"\r\n                                        }`}\r\n                                    >\r\n                                        <span\r\n                                            className={t.isCompleted && \"cross\"}\r\n                                        >\r\n                                            {t.value}\r\n                                        </span>\r\n                                        <span className=\"tools\">\r\n                                            <span className=\"date\">\r\n                                                {`${new Date(\r\n                                                    t.date\r\n                                                ).toLocaleString()}`}\r\n                                            </span>\r\n                                            <button\r\n                                                className=\"btn\"\r\n                                                onClick={() =>\r\n                                                    handleDelete(t._id)\r\n                                                }\r\n                                            >\r\n                                                <MdDelete />\r\n                                            </button>\r\n                                            <input\r\n                                                className=\"btn\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"completed\"\r\n                                                checked={t.isCompleted}\r\n                                                onChange={() =>\r\n                                                    handleCompleted(t._id)\r\n                                                }\r\n                                            />\r\n                                        </span>\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    ) : null}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { LoadContext } from \"../context\";\r\nimport \"./index.scss\";\r\n\r\nconst Login = () => {\r\n    let history = useHistory();\r\n    const { setLoading } = React.useContext(LoadContext);\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const email = e.target.email.value;\r\n        const pass = e.target.password.value;\r\n        let res = await fetch(`${process.env.REACT_APP_BASE_URL + \"/login\"}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ email: email, password: pass }),\r\n        });\r\n        if (res.status === 200) {\r\n            let response = await res.json();\r\n            localStorage.setItem(\"token\", response.user);\r\n            history.push(\"/\");\r\n        } else {\r\n            setLoading(false);\r\n            alert(\"wrong username or password\");\r\n        }\r\n    };\r\n    React.useEffect(() => {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token) {\r\n            history.replace(\"/\");\r\n        }\r\n    }, []);\r\n    return (\r\n        <div className=\"login-container\">\r\n            <h3 className=\"start\">\r\n                Let's set go <span className=\"high\">╰(*°▽°*)╯</span>{\" \"}\r\n            </h3>\r\n            <div className=\"avatar\" />\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"inp-content\">\r\n                    <label htmlFor=\"email\" className=\"label\">\r\n                        Please enter your email\r\n                    </label>\r\n                    <input type=\"email\" name=\"email\" placeholder=\" \" required />\r\n                    <hr className=\"border-bottom\" />\r\n                    <span className=\"placeholder\">email</span>\r\n                </div>\r\n                <div className=\"inp-content\">\r\n                    <label htmlFor=\"password\" className=\"label\">\r\n                        Please enter your password\r\n                    </label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\" \"\r\n                        minLength=\"6\"\r\n                        required\r\n                    />\r\n                    <hr className=\"border-bottom\" />\r\n                    <span className=\"placeholder\">password</span>\r\n                </div>\r\n                <center>\r\n                    <input\r\n                        type=\"submit\"\r\n                        value=\"Login\"\r\n                        className=\"form-button\"\r\n                    />\r\n                </center>\r\n                <Link to=\"/register\" className=\"link\">\r\n                    Click here to register\r\n                </Link>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { LoadContext } from \"../context\";\r\nimport \"../login/index.scss\";\r\n\r\nconst Register = () => {\r\n    const [dp, setDp] = React.useState(false);\r\n    let history = useHistory();\r\n    const { setLoading } = React.useContext(LoadContext);\r\n    const handleDp = async (e) => {\r\n        let tdp = e.target.files[0];\r\n        if (tdp && tdp.size < 2000000) {\r\n            const reader = new FileReader();\r\n            reader.onload = (re) => {\r\n                let temp = btoa(re.target.result);\r\n                setDp(temp);\r\n            };\r\n            reader.readAsBinaryString(tdp);\r\n        } else {\r\n            alert(\"please choose file of size less than 2MB!\");\r\n        }\r\n    };\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const name = e.target.email.value;\r\n        const email = e.target.email.value;\r\n        const pass = e.target.password.value;\r\n        let res = await fetch(\r\n            `${process.env.REACT_APP_BASE_URL + \"/register\"}`,\r\n            {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    name: name,\r\n                    email: email,\r\n                    password: pass,\r\n                    dp: dp,\r\n                }),\r\n            }\r\n        );\r\n        setLoading(false);\r\n        if (res.status === 200) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            alert(\"user already exist\");\r\n        }\r\n    };\r\n    React.useEffect(() => {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token) {\r\n            history.replace(\"/\");\r\n        }\r\n    }, []);\r\n    return (\r\n        <div className=\"login-container\">\r\n            <h3 className=\"start\">\r\n                Let's get started <span className=\"high\">╰(*°▽°*)╯</span>{\" \"}\r\n            </h3>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    <div className=\"avatar\">\r\n                        {dp && (\r\n                            <img\r\n                                className=\"dp\"\r\n                                alt=\"dp\"\r\n                                src={`data:image/jpeg;base64,${dp}`}\r\n                            />\r\n                        )}\r\n                        <span className=\"upload\" />\r\n                    </div>\r\n                    <input\r\n                        type=\"file\"\r\n                        name=\"dp\"\r\n                        accept=\".jpeg, .jpg,.png\"\r\n                        onChange={handleDp}\r\n                    />\r\n                </label>\r\n                <div className=\"inp-content\">\r\n                    <label htmlFor=\"name\" className=\"label\">\r\n                        Please enter your name\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        placeholder=\" \"\r\n                        minLength=\"3\"\r\n                        required\r\n                    />\r\n                    <hr className=\"border-bottom\" />\r\n                    <span className=\"placeholder\">name</span>\r\n                </div>\r\n                <div className=\"inp-content\">\r\n                    <label htmlFor=\"email\" className=\"label\">\r\n                        Please enter your email\r\n                    </label>\r\n                    <input type=\"email\" name=\"email\" placeholder=\" \" required />\r\n                    <hr className=\"border-bottom\" />\r\n                    <span className=\"placeholder\">email</span>\r\n                </div>\r\n                <div className=\"inp-content\">\r\n                    <label htmlFor=\"password\" className=\"label\">\r\n                        Please enter your password\r\n                    </label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\" \"\r\n                        minLength=\"6\"\r\n                        required\r\n                    />\r\n                    <hr className=\"border-bottom\" />\r\n                    <span className=\"placeholder\">password</span>\r\n                </div>\r\n                <center>\r\n                    <input\r\n                        type=\"submit\"\r\n                        value=\"Register\"\r\n                        className=\"form-button\"\r\n                    />\r\n                </center>\r\n                <Link to=\"/login\" className=\"link\">\r\n                    Click here to login\r\n                </Link>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n","import \"./index.scss\";\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"loading-container\">\r\n            <span className=\"loading\" />\r\n        </div>\r\n    );\r\n};\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport Dashboard from \"./components/dashboard\";\r\nimport Login from \"./components/login\";\r\nimport Register from \"./components/register\";\r\nimport { LoadContext } from \"./components/context\";\r\nimport Loading from \"./components/loading\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n    const [loading, setLoading] = React.useState(false);\r\n    return (\r\n        <LoadContext.Provider value={{ setLoading }}>\r\n            {loading && <Loading />}\r\n            <Router>\r\n                <Route path=\"/login\" exact component={Login} />\r\n                <Route path=\"/register\" exact component={Register} />\r\n                <Route path=\"/\" exact component={Dashboard} />\r\n            </Router>\r\n        </LoadContext.Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}