{"version":3,"sources":["components/todo.js","components/header.js","App.js","index.js"],"names":["Base","layout","React","useState","todo","settodo","todoList","settodoList","expand","setexpand","handleAdd","a","details","value","JSON","stringify","fetch","method","headers","body","handleDelete","id","filter","t","_id","handleCompleted","element","findIndex","elem","newtodoList","isCompleted","useEffect","mode","res","json","init","rows","onClick","onChange","e","target","onBlur","placeholder","className","map","type","Header","layt","darkMode","setDarkMode","src","App","setlayout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.454609aa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./comp.scss\";\r\nimport { MdDelete } from \"react-icons/md\";\r\n\r\nconst Base = ({ layout }) => {\r\n    const [todo, settodo] = React.useState(\"\");\r\n    const [todoList, settodoList] = React.useState([]);\r\n    const [expand, setexpand] = React.useState(false);\r\n\r\n    const handleVal = (e) => settodo(e.target.value);\r\n\r\n    const handlexpand = () => setexpand(true);\r\n\r\n    const handleAdd = async () => {\r\n        if (todo != \"\") {\r\n            let details = {\r\n                value: todo,\r\n            };\r\n            settodoList([...todoList, details]);\r\n            details = JSON.stringify(details);\r\n            let send = await fetch(\r\n                \"https://keep-clone41.herokuapp.com/create-task\",\r\n                {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    body: details,\r\n                }\r\n            );\r\n            settodo(\"\");\r\n            setexpand(false);\r\n        } else setexpand(false);\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        await settodoList(todoList.filter((t) => t._id != id));\r\n        await fetch(`https://keep-clone41.herokuapp.com/delete-task?id=${id}`, {\r\n            method: \"DELETE\",\r\n        });\r\n    };\r\n\r\n    const handleCompleted = async (id) => {\r\n        //find index of that array object\r\n        const element = todoList.findIndex((elem) => elem._id === id);\r\n        //copy array into new variable using spread op.\r\n        const newtodoList = [...todoList];\r\n        //edit that element\r\n        newtodoList[element] = {\r\n            ...newtodoList[element],\r\n            isCompleted: true,\r\n        };\r\n\r\n        await settodoList(newtodoList);\r\n        await fetch(\r\n            `https://keep-clone41.herokuapp.com/update?id=${id}&isCompleted=${true}`,\r\n            {\r\n                method: \"PUT\",\r\n            }\r\n        );\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        const init = async () => {\r\n            let res = await fetch(\"https://keep-clone41.herokuapp.com\", {\r\n                method: \"GET\",\r\n                mode: \"cors\",\r\n            });\r\n            res = await res.json();\r\n            await settodoList(res);\r\n        };\r\n        init();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <form>\r\n                <textarea\r\n                    rows={expand ? 3 : 1}\r\n                    value={todo}\r\n                    onClick={handlexpand}\r\n                    onChange={handleVal}\r\n                    onBlur={handleAdd}\r\n                    placeholder=\"Take your note...\"\r\n                />\r\n            </form>\r\n\r\n            {todoList != [] ? (\r\n                <ul className={`container ${!layout && \"f\"}`}>\r\n                    {todoList.map((t) => (\r\n                        <li\r\n                            key={t._id}\r\n                            className={`noteholder ${!layout && \"f\"}`}\r\n                        >\r\n                            <div className={`textarea ${!layout && \"f\"}`}>\r\n                                <span className={t.isCompleted && \"cross\"}>\r\n                                    {t.value}\r\n                                </span>\r\n                                <span className=\"tools\">\r\n                                    <button\r\n                                        className=\"btn\"\r\n                                        onClick={() => handleDelete(t._id)}\r\n                                    >\r\n                                        <MdDelete />\r\n                                    </button>\r\n                                    <input\r\n                                        className=\"btn\"\r\n                                        type=\"checkbox\"\r\n                                        id=\"completed\"\r\n                                        onClick={() => handleCompleted(t._id)}\r\n                                    />\r\n                                </span>\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            ) : null}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Base;\r\n","import React from \"react\";\r\nimport \"./comp.scss\";\r\nimport {\r\n    RiLayoutGridLine,\r\n    RiLayoutRowLine,\r\n    RiSunLine,\r\n    RiSunFill,\r\n} from \"react-icons/ri\";\r\n\r\nexport default function Header({ layt, layout, darkMode, setDarkMode }) {\r\n    return (\r\n        <header>\r\n            <img src=\"https://www.gstatic.com/images/branding/product/1x/keep_2020q4_48dp.png\" />\r\n            <p>Keep clone</p>\r\n            <div className=\"layoutBtn\" onClick={() => layt()}>\r\n                {layout ? <RiLayoutRowLine /> : <RiLayoutGridLine />}\r\n            </div>\r\n            <div className=\"layoutBtn\" onClick={() => setDarkMode(!darkMode)}>\r\n                {darkMode ? <RiSunFill /> : <RiSunLine />}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n","import Base from \"./components/todo\";\r\nimport Header from \"./components/header\";\r\nimport React from \"react\";\r\n\r\nfunction App() {\r\n    const [layout, setlayout] = React.useState(true);\r\n    const [darkMode, setDarkMode] = React.useState(false);\r\n\r\n    const lay = () => {\r\n        layout ? setlayout(false) : setlayout(true);\r\n    };\r\n\r\n    return (\r\n        <div className={`main ${darkMode && \"darkMode\"}`}>\r\n            <Header\r\n                layt={lay}\r\n                layout={layout}\r\n                darkMode={darkMode}\r\n                setDarkMode={setDarkMode}\r\n            />\r\n            <Base layout={layout} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}